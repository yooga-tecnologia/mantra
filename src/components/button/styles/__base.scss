@use "sass:map";
@use "../../../shared/theme/core/theme" as theme;
@use "../../../shared/theme/tokens/sizing" as sizing;

$component-prefix: theme.get-prefix('button');

// Sizes

$button-size-configs: (
  "tiny": (
    font-size: 12px,
    padding: 8px,
    height: 24px,
  ),
  "small": (
    font-size: 12px,
    padding: 8px,
    height: 32px,
  ),
  "medium": (
    font-size: 14px,
    padding: 12px 16px,
    height: 48px,
  ),
  "large": (
    font-size: 16px,
    padding: 16px 24px,
    height: 56px,
  ),
);

$border-radius-medium: map.get(sizing.$border-radius-map, "medium");

@each $size, $configs in $button-size-configs {
  $size-map: map.get($button-size-configs, $size);

  #{$component-prefix} {
    @include theme.set-box-sizing(border-box);
  }

  // TODO - Check if it overrides the L85 rule
  #{$component-prefix}[full-width="true"],
  a.#{$component-prefix}-full-width,
  button.#{$component-prefix}-full-width {
    width: 100%;
  }

  .#{$component-prefix}disabled:hover {
    pointer-events: none;
    cursor: not-allowed;
  }

  button[class^="#{$component-prefix}-#{$size}"],
  .#{$component-prefix}-#{$size} {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 8px;

    padding: map.get($size-map, "padding");
    height: map.get($size-map, "height");
    border-radius: $border-radius-medium;

    &:not(:disabled):hover,
    &:not(.button-disabled):hover {
      cursor: pointer;
    }

    &,
    &:hover,
    &:focus {
      transition: all ease-in-out .2s;
    }

    span {
      font-size: map.get($size-map, "font-size");
      font-weight: 500;
    }

    &.#{$component-prefix}-icon {
      height: map.get($size-map, "height");
      width: map.get($size-map, "height");
    }
  }
}

.#{$component-prefix}-full-width {
  display: flex;
  width: 100%;
  justify-content: center;
  align-items: center;
}