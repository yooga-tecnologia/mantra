@use "sass:map";

@use "../../../shared/theme/tokens/actions/index.scss" as action-tokens;
@use "../../../shared/theme/core/theme" as theme;

///
/// Button Emphasis Theme
///

$component-prefix: theme.get-prefix('button');
$color-opacity-black-5: rgba(0, 0, 0, 0.05);

@mixin set-button-styles() {
  @each $theme, $specs in action-tokens.$emphasis-theme-map {
    button.#{$component-prefix}-emphasis.#{$component-prefix}-#{$theme},
    .#{$component-prefix}-emphasis.#{$component-prefix}-#{$theme} {
      box-shadow:
        0px 4px 6px 0px $color-opacity-black-5,
        0px 2px 4px 0px $color-opacity-black-5,
        0px 0px 1px 0px $color-opacity-black-5;

      @include theme.set-colors(
        map.get($specs, "default", "text-color"),
        map.get($specs, "default", "bg-color"),
        transparent
      );

      &:hover {
        @include theme.set-colors(
          map.get($specs, "hover", "text-color"),
          map.get($specs, "hover", "bg-color")
        );
      }
      &:focus {
        @include theme.set-colors(
          map.get($specs, "focus", "text-color"),
          map.get($specs, "focus", "bg-color")
        );
      }
      &:disabled {
        @include theme.set-colors(
          map.get(
            action-tokens.$emphasis-theme-map,
            "common-states",
            "disabled",
            "text-color"
          ),
          map.get(
            action-tokens.$emphasis-theme-map,
            "common-states",
            "disabled",
            "bg-color"
          )
        );
      }
    }
  }
}
